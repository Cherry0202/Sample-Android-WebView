{"version":3,"sources":["webpack:///./src/views/DeviceLink.vue?648e","webpack:///./src/views/DeviceLink.vue","webpack:///./src/views/DeviceLink.vue?3a9d","webpack:///./src/views/DeviceLink.vue?32f8","webpack:///./src/callAndroidMethod/findDevice.js"],"names":["class","title","$t","btDevices","device","index","deviceConnection","key","icon","chromecastIcon","deviceName","btMacAddress","macAddress","checkIcon","components","Header","setup","store","linkIcon","state","connectingBluetoothDevice","value","JSON","parse","findDevice","btDevice","commit","render","__scopeId","callAndroidFindDevice","Android"],"mappings":"2IAAA,W,sICEOA,MAAM,Q,GACLA,MAAM,e,GAGHA,MAAM,e,yKALf,eAA2C,GAAlCC,MAAO,EAAAC,GAAE,sB,kBAClB,eAQM,MARN,EAQM,CAPJ,eAMK,KANL,EAMK,E,mBALH,eAIK,2BAJoD,EAAAC,WAAS,SAA3BC,EAAQC,G,wBAA/C,eAIK,MAJDL,MAAM,qBAA2D,QAAK,mBAAE,EAAAM,iBAAiBF,IAAUG,IAAKF,G,CAC1G,eAAoE,GAAhDG,KAAM,EAAAC,eAAgBT,MAAM,mB,iBAChD,eAAkD,IAAlD,EAAkD,eAAxBI,EAAOM,YAAU,GACmB,EAAAC,eAAiBP,EAAOQ,Y,iBAAtF,eAAoG,G,MAAhFJ,KAAM,EAAAK,UAAWb,MAAM,c,yICQpC,iBAAgB,CAC7Bc,WAAY,CACVC,SAAA,MAEFC,MAJ6B,WAK3B,IAAMC,EAAQ,iBACRC,EAAW,gBAAS,kBAAM,UAC1BL,EAAY,gBAAS,kBAAM,UAC3BJ,EAAiB,gBAAS,kBAAM,UAChCE,EAAe,gBAAS,kBAAMM,EAAME,MAAMC,0BAA0BR,cACpET,EAAY,eAAI,IAItBA,EAAUkB,MAAQC,KAAKC,MAAMC,EAAA,MAE7B,IAAMlB,EAAmB,SAACmB,GACxBR,EAAMS,OAAO,+BAAgCD,IAG/C,MAAO,CACLP,WACAL,YACAJ,iBACAN,YACAQ,eACAL,uB,UCpCN,EAAOqB,OAAS,EAChB,EAAOC,UAAY,kBAEJ,gB,kCCRR,IAAMC,EAAwB,WACnC,OAAOC,QAAQN,cAGFK","file":"js/chunk-5e7c43f4.63f9cfcb.js","sourcesContent":["export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./DeviceLink.vue?vue&type=style&index=0&id=1aa401a1&scoped=true&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./DeviceLink.vue?vue&type=style&index=0&id=1aa401a1&scoped=true&lang=scss\"","<template>\n  <Header :title=\"$t('device-link.title')\" />\n  <div class=\"wrap\">\n    <ul class=\"device-list\">\n      <li class=\"select-device-area\" v-for=\"(device, index) in btDevices\" @click=\"deviceConnection(device)\" :key=\"index\">\n        <font-awesome-icon :icon=\"chromecastIcon\" class=\"chromecast-icon\" />\n        <p class=\"device-name\">{{ device.deviceName }}</p>\n        <font-awesome-icon :icon=\"checkIcon\" class=\"check-icon\" v-if=\"btMacAddress === device.macAddress\" />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { useStore } from 'vuex'\nimport Header from '@/components/Header.vue'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faChromecast } from '@fortawesome/free-brands-svg-icons'\nimport { BluetoothDevice } from '@/store'\n\n// webで見られるようにしてる\n// import BluetoothDevicesDemoData from '@/callAndroidMethod/BluetoothDevicesDemoData'\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport findDevice from '../callAndroidMethod/findDevice'\n\nexport default defineComponent({\n  components: {\n    Header\n  },\n  setup() {\n    const store = useStore()\n    const linkIcon = computed(() => faLink)\n    const checkIcon = computed(() => faCheckCircle)\n    const chromecastIcon = computed(() => faChromecast)\n    const btMacAddress = computed(() => store.state.connectingBluetoothDevice.macAddress)\n    const btDevices = ref([] as BluetoothDevice[])\n\n    // webで見られるようにしてる\n    // btDevices.value = BluetoothDevicesDemoData\n    btDevices.value = JSON.parse(findDevice)\n\n    const deviceConnection = (btDevice: BluetoothDevice) => {\n      store.commit('setConnectingBluetoothDevice', btDevice)\n    }\n\n    return {\n      linkIcon,\n      checkIcon,\n      chromecastIcon,\n      btDevices,\n      btMacAddress,\n      deviceConnection\n    }\n  }\n})\n</script>\n\n<style scoped lang=\"scss\">\n.wrap {\n  padding: 0 1rem;\n\n  .device-list {\n    .select-device-area {\n      display: flex;\n      align-items: center;\n      padding: 1rem 0;\n      color: #222;\n      list-style: none;\n      border-top: 1px dashed #dbdbdb;\n\n      &:first-child {\n        border-top: 1px solid #d9d9d9;\n      }\n      &:last-child {\n        border-bottom: 1px solid #d9d9d9;\n      }\n\n      .chromecast-icon {\n        font-size: 1.5rem;\n      }\n\n      .device-name {\n        padding-left: 1rem;\n        margin-right: auto;\n        font-size: 1.25rem;\n        //font-weight: 600;\n      }\n\n      .check-icon {\n        margin-right: 1rem;\n        font-size: 1.5rem;\n        color: #b44241;\n      }\n    }\n  }\n}\n</style>\n","\nimport { defineComponent, computed, ref } from 'vue'\nimport { useStore } from 'vuex'\nimport Header from '@/components/Header.vue'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons'\nimport { faChromecast } from '@fortawesome/free-brands-svg-icons'\nimport { BluetoothDevice } from '@/store'\n\n// webで見られるようにしてる\n// import BluetoothDevicesDemoData from '@/callAndroidMethod/BluetoothDevicesDemoData'\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport findDevice from '../callAndroidMethod/findDevice'\n\nexport default defineComponent({\n  components: {\n    Header\n  },\n  setup() {\n    const store = useStore()\n    const linkIcon = computed(() => faLink)\n    const checkIcon = computed(() => faCheckCircle)\n    const chromecastIcon = computed(() => faChromecast)\n    const btMacAddress = computed(() => store.state.connectingBluetoothDevice.macAddress)\n    const btDevices = ref([] as BluetoothDevice[])\n\n    // webで見られるようにしてる\n    // btDevices.value = BluetoothDevicesDemoData\n    btDevices.value = JSON.parse(findDevice)\n\n    const deviceConnection = (btDevice: BluetoothDevice) => {\n      store.commit('setConnectingBluetoothDevice', btDevice)\n    }\n\n    return {\n      linkIcon,\n      checkIcon,\n      chromecastIcon,\n      btDevices,\n      btMacAddress,\n      deviceConnection\n    }\n  }\n})\n","import { render } from \"./DeviceLink.vue?vue&type=template&id=1aa401a1&scoped=true&bindings={}\"\nimport script from \"./DeviceLink.vue?vue&type=script&lang=ts\"\nexport * from \"./DeviceLink.vue?vue&type=script&lang=ts\"\n\nimport \"./DeviceLink.vue?vue&type=style&index=0&id=1aa401a1&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-1aa401a1\"\n\nexport default script","export const callAndroidFindDevice = () =>{\n  return Android.findDevice();\n}\n\nexport default callAndroidFindDevice()"],"sourceRoot":""}