{"version":3,"sources":["webpack:///./src/views/QuestionForm.vue","webpack:///./src/graphql/queries/questionForm.ts","webpack:///./src/graphql/mutations/insertChatRoom.ts","webpack:///./src/views/QuestionForm.vue?c6f9","webpack:///./src/views/QuestionForm.vue?ba29","webpack:///./src/views/QuestionForm.vue?29cb","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["class","src","course","image","alt","title","$t","color","instructor","icon","name","submit","state","comment","cols","rows","placeholder","questionForm","insertChatRoomMutation","components","Header","setup","currentRoute","SubscriptionCourseId","value","query","course_id","store","router","id","student_id","currentUser","uid","result","onResult","refetch","data","SubscriptionCourses","Course","Instructor","courseId","queryResult","chatRoom","ChatRooms","length","push","variables","message","insertChatRoom","mutate","insertChatRoomDone","onDone","chatRoomId","insert_ChatRooms","returning","console","log","params","render","__scopeId","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","this","match","error"],"mappings":"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","file":"js/chunk-048a835f.066fc284.js","sourcesContent":["<template>\n  <div class=\"bg-area\">\n    <!--    TODO コンポーネント化-->\n    <img :src=\"course?.image\" alt=\"\" class=\"bg-image\" />\n    <Header :title=\"$t('question.title')\" color=\"#fff\" />\n    <div class=\"course-info\">\n      <p class=\"course-title\">{{ course?.title }}</p>\n      <p>\n        <img :src=\"instructor?.icon\" alt=\"teacher-icon\" class=\"face-icon\" />\n        <span class=\"teacher-name\">{{ instructor?.name }}</span>\n      </p>\n    </div>\n  </div>\n  <div class=\"wrap\">\n    <form @submit.prevent=\"submit\" class=\"question-form\">\n      <label>\n        <textarea\n          v-model=\"state.comment\"\n          cols=\"30\"\n          rows=\"10\"\n          :placeholder=\"$t('question.input-contents')\"\n          class=\"question-content\"\n        ></textarea>\n      </label>\n      <button class=\"submit-btn\">{{ $t('question.submit-btn') }}</button>\n    </form>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive } from 'vue'\nimport Header from '@/components/Header.vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { useResult, useQuery, useMutation } from '@vue/apollo-composable'\n\nimport questionForm from '@/graphql/queries/questionForm'\nimport insertChatRoomMutation from '@/graphql/mutations/insertChatRoom'\nimport { QuestionFormQuery, InsertChatRoomMutation } from '@/graphql/@types/types'\n\nexport default defineComponent({\n  components: {\n    Header\n  },\n  setup() {\n    const state = reactive({\n      comment: ''\n    })\n\n    const { currentRoute } = useRouter()\n    const SubscriptionCourseId = currentRoute.value.query.course_id\n    const store = useStore()\n    const router = useRouter()\n\n    const { result, onResult, refetch } = useQuery<QuestionFormQuery>(questionForm, {\n      id: SubscriptionCourseId,\n      student_id: store.state.currentUser?.uid\n    })\n    refetch()\n\n    const course = useResult(result, null, (data) => data.SubscriptionCourses[0].Course)\n    const instructor = useResult(result, null, (data) => data.SubscriptionCourses[0].Course.Instructor)\n    const courseId = useResult(result, null, (data) => data.SubscriptionCourses[0].course_id)\n\n    // chatRoomがあった場合のリダイレクト処理\n    onResult((queryResult) => {\n      const chatRoom = queryResult.data.SubscriptionCourses[0].Course.ChatRooms\n      if (chatRoom.length) {\n        router.push({ name: 'TakeCourseDetail', query: { id: SubscriptionCourseId } })\n      }\n    })\n\n    const { mutate: insertChatRoom, onDone: insertChatRoomDone } = useMutation<InsertChatRoomMutation>(insertChatRoomMutation, () => ({\n      variables: {\n        course_id: courseId.value,\n        student_id: store.state.currentUser?.uid,\n        message: state.comment\n      }\n    }))\n\n    const submit = () => {\n      insertChatRoom()\n    }\n\n    insertChatRoomDone((result) => {\n      const chatRoomId = result.data?.insert_ChatRooms?.returning[0].id\n      console.log(chatRoomId)\n      router.push({ name: 'NoticeMessage', params: { id: chatRoomId } })\n    })\n    return {\n      state,\n      course,\n      instructor,\n      submit\n    }\n  }\n})\n</script>\n\n<style scoped lang=\"scss\">\n.bg-area {\n  position: relative;\n  width: 100%;\n  height: 250px;\n  overflow: hidden;\n  background-color: #c3c3c3;\n\n  .bg-image {\n    position: absolute;\n    top: -5px;\n    left: -5px;\n    width: calc(100% + 10px);\n    filter: blur(5px) brightness(70%);\n    object-fit: contain;\n  }\n\n  .course-info {\n    position: relative;\n    padding: 0 1rem;\n    color: #fff;\n    .course-title {\n      margin: 2rem 0;\n      font-size: 1.5rem;\n      text-align: left;\n    }\n    .face-icon {\n      width: 3rem;\n      height: 3rem;\n      vertical-align: middle;\n      border-radius: 50%;\n    }\n    .teacher-name {\n      padding-left: 1rem;\n      font-size: 1.25rem;\n      vertical-align: middle;\n    }\n  }\n}\n.wrap {\n  width: 100%;\n  padding: 0 1rem;\n\n  .question-form {\n    margin-top: 1.5rem;\n    font-size: 16px;\n\n    .question-content {\n      width: 100%;\n      height: 230px;\n      padding: 0.5rem;\n      margin-bottom: 1.5rem;\n      background-color: white;\n      border-radius: 0.25rem;\n      outline: 0;\n      box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n    }\n\n    .submit-btn {\n      width: 100%;\n      height: 3rem;\n      font-weight: bolder;\n      letter-spacing: 0.1rem;\n      background-color: white;\n      border: solid #d3ae4f;\n      border-radius: 0.5rem;\n    }\n  }\n}\n</style>\n","import { gql } from '@apollo/client/core'\n\nconst questionForm = gql`\n  query QuestionForm($id: uuid, $student_id: uuid) {\n    SubscriptionCourses(where: { id: { _eq: $id } }) {\n      course_id\n      Course {\n        image\n        title\n        Instructor {\n          icon\n          name\n          id\n        }\n        ChatRooms(where: { student_id: { _eq: $student_id } }) {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport default questionForm\n","import { gql } from '@apollo/client/core'\n\nconst insertChatRoomMutation = gql`\n  mutation InsertChatRoom($student_id: uuid, $course_id: Int, $message: String) {\n    insert_ChatRooms(\n      objects: {\n        student_id: $student_id\n        course_id: $course_id\n        Chats: {\n          data: [\n            { sender: student, message: $message }\n            { sender: instructor, message: \"ご質問ありがとうございます！ 順番に返信いたしますので今しばらくお待ち下さいませ。\" }\n          ]\n        }\n      }\n    ) {\n      returning {\n        id\n      }\n    }\n  }\n`\n\nexport default insertChatRoomMutation\n","\nimport { defineComponent, reactive } from 'vue'\nimport Header from '@/components/Header.vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { useResult, useQuery, useMutation } from '@vue/apollo-composable'\n\nimport questionForm from '@/graphql/queries/questionForm'\nimport insertChatRoomMutation from '@/graphql/mutations/insertChatRoom'\nimport { QuestionFormQuery, InsertChatRoomMutation } from '@/graphql/@types/types'\n\nexport default defineComponent({\n  components: {\n    Header\n  },\n  setup() {\n    const state = reactive({\n      comment: ''\n    })\n\n    const { currentRoute } = useRouter()\n    const SubscriptionCourseId = currentRoute.value.query.course_id\n    const store = useStore()\n    const router = useRouter()\n\n    const { result, onResult, refetch } = useQuery<QuestionFormQuery>(questionForm, {\n      id: SubscriptionCourseId,\n      student_id: store.state.currentUser?.uid\n    })\n    refetch()\n\n    const course = useResult(result, null, (data) => data.SubscriptionCourses[0].Course)\n    const instructor = useResult(result, null, (data) => data.SubscriptionCourses[0].Course.Instructor)\n    const courseId = useResult(result, null, (data) => data.SubscriptionCourses[0].course_id)\n\n    // chatRoomがあった場合のリダイレクト処理\n    onResult((queryResult) => {\n      const chatRoom = queryResult.data.SubscriptionCourses[0].Course.ChatRooms\n      if (chatRoom.length) {\n        router.push({ name: 'TakeCourseDetail', query: { id: SubscriptionCourseId } })\n      }\n    })\n\n    const { mutate: insertChatRoom, onDone: insertChatRoomDone } = useMutation<InsertChatRoomMutation>(insertChatRoomMutation, () => ({\n      variables: {\n        course_id: courseId.value,\n        student_id: store.state.currentUser?.uid,\n        message: state.comment\n      }\n    }))\n\n    const submit = () => {\n      insertChatRoom()\n    }\n\n    insertChatRoomDone((result) => {\n      const chatRoomId = result.data?.insert_ChatRooms?.returning[0].id\n      console.log(chatRoomId)\n      router.push({ name: 'NoticeMessage', params: { id: chatRoomId } })\n    })\n    return {\n      state,\n      course,\n      instructor,\n      submit\n    }\n  }\n})\n","import { render } from \"./QuestionForm.vue?vue&type=template&id=7e1751f9&scoped=true&bindings={}\"\nimport script from \"./QuestionForm.vue?vue&type=script&lang=ts\"\nexport * from \"./QuestionForm.vue?vue&type=script&lang=ts\"\n\nimport \"./QuestionForm.vue?vue&type=style&index=0&id=7e1751f9&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-7e1751f9\"\n\nexport default script","export { default } from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./QuestionForm.vue?vue&type=style&index=0&id=7e1751f9&scoped=true&lang=scss\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./QuestionForm.vue?vue&type=style&index=0&id=7e1751f9&scoped=true&lang=scss\"","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}